#!/bin/sh
#该脚本是主要脚本，弄明白这个脚本，就明白原理了。
sleep 1
lock="/www/origin.lock"
if [ -f "$lock" ]; then
	echo "非初始环境.不需要备份"
else
	echo "初始环境.开始备份"
	
	cp /etc/config/wireless /etc/config/wireless.origin
	cp /etc/config/firewall /etc/config/firewall.origin
	cp /etc/config/network /etc/config/network.origin
	echo origin > /www/origin.lock
	wan_mac_old=$(ifconfig $(ubus call network.interface.wan status | grep device | awk -F '\"' '{print $4}' | tail -n 1) | grep HWaddr | awk '{print $5}')
	echo $wan_mac_old
	echo $wan_mac_old > /www/mac_save_old
	echo "完成备份"
fi
sleep 1
##########电脑版切换手机
pc="/etc/init.d/nk4"
if [ -f "$pc" ]; then
	echo "当前环境为电脑版。开始清除，并还原"
	rm /etc/init.d/nk4
	ps |grep "nk4.sh"|grep -v "grep"|awk '{print $1}'|xargs kill -9 #杀掉进程
	#cp /etc/config/wireless.origin /etc/config/wireless
	cp /etc/config/firewall.origin /etc/config/firewall
	cp /etc/config/network.origin /etc/config/network
	cp /etc/ppp/plugins/rp-pppoe.so.bak /etc/ppp/plugins/rp-pppoe.so 
	cp /lib/netifd/proto/ppp.sh_bak /lib/netifd/proto/ppp.sh 
	uci commit
	
else
	echo "当前为手机版，继续执行拨号"
fi
sleep 1


###########
pid="/tmp/dialtool.pid"
if [ -f "$pid" ]; then
	echo "dialtool is running, exit!"
	exit 0
fi
echo runnig > /tmp/dialtool.pid
flag="/www/mac_save_old"
if [ -f "$flag" ]; then
	echo "second."
else
	echo "first."
	uci set dhcp.@dhcp[0].force="1" #强制dhcp，xl会链接不到
	wan_mac_old=$(ifconfig $(ubus call network.interface.wan status | grep device | awk -F '\"' '{print $4}' | tail -n 1) | grep HWaddr | awk '{print $5}')
	echo $wan_mac_old
	echo $wan_mac_old > /www/mac_save_old
fi

mark=$1
if [ $mark -eq 1 ]; then
	echo "dialtool start."
##### 设置初始mac 解决安卓手机不认账的情况
		mac_now=$(ifconfig $(ubus call network.interface.wan status | grep device | awk -F '\"' '{print $4}' | tail -n 1) | grep HWaddr | awk '{print $5}')
		mac_old=$(cat /www/mac_save_old | awk '{print $1}')
		if [ "$mac_now" !=  "$mac_old" ];then
			echo "$mac_old"
			uci set network.wan.macaddr="$mac_old"
			uci set network.@device[1].macaddr="$mac_old"
		else
			echo "$mac_now"
		fi	
	faaa=$(grep wifi-iface /etc/config/wireless | wc -l) #####防止在执行中崩溃，wifi配置出现严重崩溃
	if [  "$faaa" -ge 1 ]; then
		echo "非首次运行"
		cp /etc/config/wireless.back /etc/config/wireless
	
	else 
		echo "首次运行，不用重置."
	fi
	uci commit
	sleep 1

	# wan_mac_origin=$(cat /www/mac_save_old | awk '{print $1}')
	# echo "$wan_mac_origin"
	# uci set network.wan.macaddr="$wan_mac_origin"
	# uci set network.@device[1].macaddr="$wan_mac_origin"

	# uci commit
	# /etc/init.d/odhcpd restart 1>/dev/null 2>&1
	# /etc/init.d/network restart 1>/dev/null 2>&1
	# /etc/init.d/firewall restart 1>/dev/null 2>&1
	# sleep 3

	####

####mac绑定wifi
	
	cp /etc/config/wireless /etc/config/wireless.back
	wifi_name_old=$(uci get wireless.@wifi-iface[0].ssid)
	echo $wifi_name_old > /www/wifi_name_old
	
		
				uci add wireless wifi-iface
			wifi_encryption_old=$(uci get wireless.@wifi-iface[0].encryption)
			if [ "$wifi_encryption_old"x = "none"x ]; then
				uci set wireless.@wifi-iface[1].encryption="none"
			else
				wifi_key_old=$(uci get wireless.@wifi-iface[0].key)
				uci set wireless.@wifi-iface[1].encryption="psk2"
				uci set wireless.@wifi-iface[1].key="$wifi_key_old"
			fi
			uci set wireless.@wifi-iface[1].device="ra"
			uci set wireless.@wifi-iface[1].network="lan" 
			#uci set network.wan6.type="bridge"

			uci set wireless.@wifi-iface[1].mode="ap"
			uci set wireless.@wifi-iface[1].maxassoc="1"
			wifi_name_old=$(cat /www/wifi_name_old | awk '{print $1}')
			if [ ${#wifi_name_old} -ge 13 ]; then
				wifi_name_old=${wifi_name_old:0:13}
			fi
			uci set wireless.@wifi-iface[1].ssid="${wifi_name_old}_辅助_$(head /dev/urandom |tr -cd a-f0-9|cut -c 1-6)"
			#uci set wireless.@wifi-iface[1].ssid="${wifi_name_old}_辅助_" ##取消随机数
			#uci set wireless.@wifi-iface[1].ssid="${wifi_name_old}_on_$(head /dev/urandom |tr -cd a-f0-9|cut -c 1-6)"
			uci set wireless.@wifi-iface[1].disabled="0"
			#;;
	
		uci commit
	######################
	wifi_old_num=$(grep wifi-iface /etc/config/wireless | wc -l)
	case "$wifi_old_num" in
		1)
			uci add wireless wifi-iface
			wifi_encryption_old=$(uci get wireless.@wifi-iface[0].encryption)
			if [ "$wifi_encryption_old"x = "none"x ]; then
				uci set wireless.@wifi-iface[1].encryption="none"
			else
				wifi_key_old=$(uci get wireless.@wifi-iface[0].key)
				uci set wireless.@wifi-iface[1].encryption="psk2"
				uci set wireless.@wifi-iface[1].key="$wifi_key_old"
				
			fi
			uci set wireless.@wifi-iface[1].device="ra"
			uci set wireless.@wifi-iface[1].network="lan wan6" #打开桥接
			uci set network.wan6.type="bridge"
			#####
			uci set	network.wan6._orig_bridge=true
			uci set	network.wan6._orig_ifname=eth0.2
			uci set	network.wan6.ifname=eth0.2
			uci set	network.wan6.reqaddress=try
			uci set	network.wan6.reqprefix=auto
			uci set	network.wan6.type=bridge
			#####
			uci set wireless.@wifi-iface[1].mode="ap"
			uci set wireless.@wifi-iface[1].maxassoc="1"
			wifi_name_old=$(cat /www/wifi_name_old | awk '{print $1}')
			if [ ${#wifi_name_old} -ge 13 ]; then
				wifi_name_old=${wifi_name_old:0:13}
			fi
			#uci set wireless.@wifi-iface[1].ssid="${wifi_name_old}_辅助_$(head /dev/urandom |tr -cd a-f0-9|cut -c 1-6)"
			#uci set wireless.@wifi-iface[1].ssid="${wifi_name_old}_on_" #取消随机数
			uci set wireless.@wifi-iface[1].ssid="${wifi_name_old}_on_$(head /dev/urandom |tr -cd a-f0-9|cut -c 1-6)"
			uci set wireless.@wifi-iface[1].disabled="0"
			;;
		2)
			uci add wireless wifi-iface
			wifi_encryption_old=$(uci get wireless.@wifi-iface[0].encryption)
			if [ "$wifi_encryption_old"x = "none"x ]; then
				uci set wireless.@wifi-iface[2].encryption="none"
			else
				wifi_key_old=$(uci get wireless.@wifi-iface[0].key)
				uci set wireless.@wifi-iface[2].encryption="psk2"
				uci set wireless.@wifi-iface[2].key="$wifi_key_old"
			fi
			uci set wireless.@wifi-iface[2].device="ra"
			uci set wireless.@wifi-iface[2].network="lan wan6" #打开桥接
			uci set network.wan6.type="bridge"
						#####
			uci set	network.wan6._orig_bridge=true
			uci set	network.wan6._orig_ifname=eth0.2
			uci set	network.wan6.ifname=eth0.2
			uci set	network.wan6.reqaddress=try
			uci set	network.wan6.reqprefix=auto
			uci set	network.wan6.type=bridge
			#####
			uci set wireless.@wifi-iface[2].mode="ap"
			uci set wireless.@wifi-iface[2].maxassoc="1"
			wifi_name_old=$(cat /www/wifi_name_old | awk '{print $1}')
			if [ ${#wifi_name_old} -ge 13 ]; then
				wifi_name_old=${wifi_name_old:0:13}
			fi
			#uci set wireless.@wifi-iface[2].ssid="${wifi_name_old}_辅助_$(head /dev/urandom |tr -cd a-f0-9|cut -c 1-6)"
			uci set wireless.@wifi-iface[2].ssid="${wifi_name_old}_on_$(head /dev/urandom |tr -cd a-f0-9|cut -c 1-6)"
			#uci set wireless.@wifi-iface[2].ssid="${wifi_name_old}_on_" #取消随机数
			uci set wireless.@wifi-iface[2].disabled="0"
			;;
		3)	
			uci add wireless wifi-iface
			wifi_encryption_old=$(uci get wireless.@wifi-iface[1].encryption)
			if [ "$wifi_encryption_old"x = "none"x ]; then
				uci set wireless.@wifi-iface[3].encryption="none"
			else
				wifi_key_old=$(uci get wireless.@wifi-iface[1].key)
				uci set wireless.@wifi-iface[3].encryption="psk2"
				uci set wireless.@wifi-iface[3].key="$wifi_key_old"
			fi
			uci set wireless.@wifi-iface[3].device="ra"
			uci set wireless.@wifi-iface[3].network="lan wan6" #打开桥接
			uci set network.wan6.type="bridge"
						#####
			uci set	network.wan6._orig_bridge=true
			uci set	network.wan6._orig_ifname=eth0.2
			uci set	network.wan6.ifname=eth0.2
			uci set	network.wan6.reqaddress=try
			uci set	network.wan6.reqprefix=auto
			uci set	network.wan6.type=bridge
			#####
			uci set wireless.@wifi-iface[3].mode="ap"
			uci set wireless.@wifi-iface[3].maxassoc="1"
			wifi_name_old=$(cat /www/wifi_name_old | awk '{print $1}')
			if [ ${#wifi_name_old} -ge 13 ]; then
				wifi_name_old=${wifi_name_old:0:13}
			fi
			#uci set wireless.@wifi-iface[3].ssid="${wifi_name_old}_辅助_$(head /dev/urandom |tr -cd a-f0-9|cut -c 1-6)"
			uci set wireless.@wifi-iface[3].ssid="${wifi_name_old}_on_$(head /dev/urandom |tr -cd a-f0-9|cut -c 1-6)"
			#uci set wireless.@wifi-iface[3].ssid="${wifi_name_old}_on_" #取消随机数
			uci set wireless.@wifi-iface[3].disabled="0"
	esac
	uci commit
	# while ( [ ${#cellphone_mac_wlan0} -lt 6 ] && [ ${#cellphone_mac_wlan1} -lt 6 ] )
	# do
		# cellphone_mac_wlan0=$(iwinfo ra0 assoclist | head -n 1 | awk '{print $1}') #openwrt wlan 潘多拉ra
		# cellphone_mac_wlan1=$(iwinfo rai0 assoclist | head -n 1 | awk '{print $1}')
		# echo $cellphone_mac_wlan0 > /www/mac_save_new_wlan0
		# echo $cellphone_mac_wlan1 > /www/mac_save_new_wlan1
		# sleep 1
		# echo $cellphone_mac_wlan0 > /www/mac_save_new
		# if [ ${#cellphone_mac_wlan0} -lt 6 ]; then
			# echo $cellphone_mac_wlan1 > /www/mac_save_new
		# fi
	# done
	
	sleep 1
	 wifi
	/etc/init.d/odhcpd restart 1>/dev/null 2>&1
	/etc/init.d/network restart 1>/dev/null 2>&1
	/etc/init.d/firewall restart 1>/dev/null 2>&1
	rm /tmp/dialtool.pid
   
else
	echo "dialtoll stop."
	#uci set wireless.@wifi-iface[1].disabled="1"
	
	#####优化步骤，防止寝室多人连接时，非拨号手机mac夺权（谢谢前任女朋友的问题反馈）
	
	
	while ( [ ${#cellphone_mac_wlan0} -lt 6 ] && [ ${#cellphone_mac_wlan1} -lt 6 ] )
	do
		cellphone_mac_wlan0=$(iwinfo ra1 assoclist | head -n 1 | awk '{print $1}') #openwrt wlan 潘多拉ra
		cellphone_mac_wlan1=$(iwinfo rai1 assoclist | head -n 1 | awk '{print $1}')
		echo $cellphone_mac_wlan0 > /www/mac_save_new_wlan0
		echo $cellphone_mac_wlan1 > /www/mac_save_new_wlan1
		sleep 1
		echo $cellphone_mac_wlan0 > /www/mac_save_new
		if [ ${#cellphone_mac_wlan0} -lt 6 ]; then
			echo $cellphone_mac_wlan1 > /www/mac_save_new
		fi
	done
	
	
	
	sleep 1
	##############################
	
	
	
	
	cp /etc/config/wireless.back /etc/config/wireless
	wan_mac_new=$(cat /www/mac_save_new_wlan0 | awk '{print $1}')
	if [ ${#wan_mac_new} -lt 6 ]; then
		wan_mac_new=$(cat /www/mac_save_new_wlan1 | awk '{print $1}')
	fi
	uci set network.wan.proto="dhcp"
	uci set network.wan.macaddr="$wan_mac_new"
	uci set network.@device[1].macaddr="$wan_mac_new"
	uci delete network.wan6.type
	
	uci commit
	

	wifi
	/etc/init.d/odhcpd restart 1>/dev/null 2>&1
	/etc/init.d/network restart 1>/dev/null 2>&1
	/etc/init.d/firewall restart 1>/dev/null 2>&1
	sleep 2
	passwd="/www/t.txt"
	if [ -f "$passwd" ]; then
	
		echo "当前授权信息已修改"
	else
		sh /www/xlxy &
		echo "无授权，开始写入"
	fi
	rm /tmp/dialtool.pid
fi

